package org.apache.xmlbeans.impl.tool;

import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.apache.commons.codec.language.bm.Rule;
import org.apache.logging.log4j.util.ProcessIdUtil;
import org.apache.xmlbeans.SchemaTypeSystem;
import org.apache.xmlbeans.SimpleValue;
import org.apache.xmlbeans.XmlError;
import org.apache.xmlbeans.XmlObject;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.impl.common.XmlErrorWatcher;
import org.apache.xmlbeans.impl.schema.StscState;
import org.apache.xmlbeans.impl.tool.Extension;
import org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument;
import org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument;

public class SchemaCompiler {
    static final /* synthetic */ boolean $assertionsDisabled = false;
    private static final String COMPATIBILITY_CONFIG_URI = "http://www.bea.com/2002/09/xbean/config";
    private static final String CONFIG_URI = "http://xml.apache.org/xmlbeans/2004/02/xbean/config";
    private static final Map<String, String> MAP_COMPATIBILITY_CONFIG_URIS = Collections.singletonMap(COMPATIBILITY_CONFIG_URI, CONFIG_URI);

    public static void printUsage() {
        System.out.println("Compiles a schema into XML Bean classes and metadata.");
        System.out.println("Usage: scomp [opts] [dirs]* [schema.xsd]* [service.wsdl]* [config.xsdconfig]*");
        System.out.println("Options include:");
        System.out.println("    -cp [a;b;c] - classpath");
        System.out.println("    -d [dir] - target binary directory for .class and .xsb files");
        System.out.println("    -src [dir] - target directory for generated .java files");
        System.out.println("    -srconly - do not compile .java files or jar the output.");
        System.out.println("    -out [xmltypes.jar] - the name of the output jar");
        System.out.println("    -name - the name of the schema type - defaults to autogenerated name");
        System.out.println("    -dl - permit network downloads for imports and includes (default is off)");
        System.out.println("    -noupa - do not enforce the unique particle attribution rule");
        System.out.println("    -nopvr - do not enforce the particle valid (restriction) rule");
        System.out.println("    -noann - ignore annotations");
        System.out.println("    -novdoc - do not validate contents of <documentation>");
        System.out.println("    -noext - ignore all extension (Pre/Post and Interface) found in .xsdconfig files");
        System.out.println("    -compiler - path to external java compiler");
        System.out.println("    -ms - initial memory for external java compiler (default '8m')");
        System.out.println("    -mx - maximum memory for external java compiler (default '256m')");
        System.out.println("    -debug - compile with debug symbols");
        System.out.println("    -quiet - print fewer informational messages");
        System.out.println("    -verbose - print more informational messages");
        System.out.println("    -version - prints version information");
        System.out.println("    -license - prints license information");
        System.out.println("    -allowmdef \"[ns] [ns] [ns]\" - ignores multiple defs in given namespaces (use ##local for no-namespace)");
        System.out.println("    -catalog [file] -  catalog file for org.apache.xml.resolver.tools.CatalogResolver. (Note: needs resolver.jar from http://xml.apache.org/commons/components/resolver/index.html)");
        System.out.println("    -partialMethods [list] -  comma separated list of bean methods to be generated. Use \"-\" to negate and \"ALL\" for all.");
        System.out.println("                              processed left-to-right, e.g. \"ALL,-GET_LIST\" exclude java.util.List getters - see XmlOptions.BeanMethod");
        System.out.println("    -repackage - repackage specification, e.g. \"org.apache.xmlbeans.metadata:mypackage.metadata\" to change the metadata directory");
        System.out.println("    -copyann - copy schema annotations to javadoc (default false) - don't activate on untrusted schema sources!");
        System.out.println();
    }

    /* JADX WARNING: Removed duplicated region for block: B:107:0x026a  */
    /* JADX WARNING: Removed duplicated region for block: B:110:0x0278  */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x02d4  */
    /* JADX WARNING: Removed duplicated region for block: B:123:0x02dc  */
    /* JADX WARNING: Removed duplicated region for block: B:126:0x02e5  */
    /* JADX WARNING: Removed duplicated region for block: B:127:0x02eb  */
    /* JADX WARNING: Removed duplicated region for block: B:133:0x02f5 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x032f  */
    /* JADX WARNING: Removed duplicated region for block: B:147:0x0335  */
    /* JADX WARNING: Removed duplicated region for block: B:149:0x0338  */
    /* JADX WARNING: Removed duplicated region for block: B:151:0x033e  */
    /* JADX WARNING: Removed duplicated region for block: B:154:0x034c  */
    /* JADX WARNING: Removed duplicated region for block: B:158:0x037a  */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x03d2  */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x03e3  */
    /* JADX WARNING: Removed duplicated region for block: B:169:0x03e7  */
    /* JADX WARNING: Removed duplicated region for block: B:172:0x0491  */
    /* JADX WARNING: Removed duplicated region for block: B:174:0x0496  */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x018e  */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x0190  */
    /* JADX WARNING: Removed duplicated region for block: B:51:0x0197  */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x0199  */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x01a0  */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x01a2  */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x01a9  */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x01ad  */
    /* JADX WARNING: Removed duplicated region for block: B:63:0x01b6  */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x01ba  */
    /* JADX WARNING: Removed duplicated region for block: B:67:0x01c3  */
    /* JADX WARNING: Removed duplicated region for block: B:68:0x01c7  */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x01d0  */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x01d4  */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x01dd  */
    /* JADX WARNING: Removed duplicated region for block: B:76:0x01e0  */
    /* JADX WARNING: Removed duplicated region for block: B:79:0x01ea  */
    /* JADX WARNING: Removed duplicated region for block: B:80:0x01ed  */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x01f7  */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x01fd  */
    /* JADX WARNING: Removed duplicated region for block: B:87:0x0219  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static void main(java.lang.String[] r34) {
        /*
            r0 = r34
            int r1 = r0.length
            r2 = 0
            if (r1 != 0) goto L_0x000d
            printUsage()
            java.lang.System.exit(r2)
            return
        L_0x000d:
            java.util.HashSet r1 = new java.util.HashSet
            r1.<init>()
            java.lang.String r3 = "h"
            r1.add(r3)
            java.lang.String r4 = "help"
            r1.add(r4)
            java.lang.String r5 = "usage"
            r1.add(r5)
            java.lang.String r6 = "license"
            r1.add(r6)
            java.lang.String r7 = "quiet"
            r1.add(r7)
            java.lang.String r8 = "verbose"
            r1.add(r8)
            java.lang.String r9 = "version"
            r1.add(r9)
            java.lang.String r10 = "dl"
            r1.add(r10)
            java.lang.String r11 = "noupa"
            r1.add(r11)
            java.lang.String r12 = "nopvr"
            r1.add(r12)
            java.lang.String r13 = "noann"
            r1.add(r13)
            java.lang.String r14 = "novdoc"
            r1.add(r14)
            java.lang.String r15 = "noext"
            r1.add(r15)
            java.lang.String r2 = "srconly"
            r1.add(r2)
            r16 = r2
            java.lang.String r2 = "debug"
            r1.add(r2)
            r17 = r2
            java.util.HashSet r2 = new java.util.HashSet
            r2.<init>()
            r18 = r15
            java.lang.String r15 = "out"
            r2.add(r15)
            r19 = r14
            java.lang.String r14 = "name"
            r2.add(r14)
            java.lang.String r14 = "src"
            r2.add(r14)
            r20 = r14
            java.lang.String r14 = "d"
            r2.add(r14)
            java.lang.String r14 = "cp"
            r2.add(r14)
            java.lang.String r14 = "compiler"
            r2.add(r14)
            java.lang.String r14 = "jar"
            r2.add(r14)
            java.lang.String r14 = "ms"
            r2.add(r14)
            java.lang.String r14 = "mx"
            r2.add(r14)
            java.lang.String r14 = "repackage"
            r2.add(r14)
            java.lang.String r14 = "schemaCodePrinter"
            r2.add(r14)
            java.lang.String r14 = "extension"
            r2.add(r14)
            r21 = r14
            java.lang.String r14 = "extensionParms"
            r2.add(r14)
            r22 = r14
            java.lang.String r14 = "allowmdef"
            r2.add(r14)
            java.lang.String r14 = "catalog"
            r2.add(r14)
            java.lang.String r14 = "partialMethods"
            r2.add(r14)
            java.lang.String r14 = "copyann"
            r2.add(r14)
            org.apache.xmlbeans.impl.tool.CommandLine r14 = new org.apache.xmlbeans.impl.tool.CommandLine
            r14.<init>(r0, r1, r2)
            java.lang.String r0 = r14.getOpt(r3)
            if (r0 != 0) goto L_0x049f
            java.lang.String r0 = r14.getOpt(r4)
            if (r0 != 0) goto L_0x049f
            java.lang.String r0 = r14.getOpt(r5)
            if (r0 == 0) goto L_0x00de
            goto L_0x049f
        L_0x00de:
            java.lang.String[] r0 = r14.getBadOpts()
            int r1 = r0.length
            if (r1 <= 0) goto L_0x010a
            int r1 = r0.length
            r2 = 0
        L_0x00e7:
            if (r2 >= r1) goto L_0x0102
            r3 = r0[r2]
            java.io.PrintStream r4 = java.lang.System.out
            java.lang.StringBuilder r5 = new java.lang.StringBuilder
            java.lang.String r6 = "Unrecognized option: "
            r5.<init>(r6)
            java.lang.StringBuilder r3 = r5.append(r3)
            java.lang.String r3 = r3.toString()
            r4.println(r3)
            int r2 = r2 + 1
            goto L_0x00e7
        L_0x0102:
            printUsage()
            r1 = 0
            java.lang.System.exit(r1)
            return
        L_0x010a:
            r1 = 0
            java.lang.String r0 = r14.getOpt(r6)
            if (r0 == 0) goto L_0x0118
            org.apache.xmlbeans.impl.tool.CommandLine.printLicense()
            java.lang.System.exit(r1)
            return
        L_0x0118:
            java.lang.String r0 = r14.getOpt(r9)
            if (r0 == 0) goto L_0x0125
            org.apache.xmlbeans.impl.tool.CommandLine.printVersion()
            java.lang.System.exit(r1)
            return
        L_0x0125:
            java.lang.String r0 = r14.getOpt(r8)
            if (r0 == 0) goto L_0x012d
            r2 = 1
            goto L_0x012e
        L_0x012d:
            r2 = 0
        L_0x012e:
            java.lang.String r0 = r14.getOpt(r7)
            if (r0 == 0) goto L_0x0136
            r0 = 1
            goto L_0x0137
        L_0x0136:
            r0 = 0
        L_0x0137:
            if (r2 == 0) goto L_0x013b
            r3 = 0
            goto L_0x013c
        L_0x013b:
            r3 = r0
        L_0x013c:
            if (r2 == 0) goto L_0x0141
            org.apache.xmlbeans.impl.tool.CommandLine.printVersion()
        L_0x0141:
            java.lang.String r4 = r14.getOpt(r15)
            java.lang.String r0 = "repackage"
            java.lang.String r5 = r14.getOpt(r0)
            java.lang.String r0 = "schemaCodePrinter"
            java.lang.String r0 = r14.getOpt(r0)
            if (r0 == 0) goto L_0x0181
            java.lang.Class r7 = java.lang.Class.forName(r0)     // Catch:{ Exception -> 0x0167 }
            r8 = 0
            java.lang.Class[] r9 = new java.lang.Class[r8]     // Catch:{ Exception -> 0x0167 }
            java.lang.reflect.Constructor r7 = r7.getDeclaredConstructor(r9)     // Catch:{ Exception -> 0x0167 }
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0167 }
            java.lang.Object r7 = r7.newInstance(r9)     // Catch:{ Exception -> 0x0167 }
            org.apache.xmlbeans.SchemaCodePrinter r7 = (org.apache.xmlbeans.SchemaCodePrinter) r7     // Catch:{ Exception -> 0x0167 }
            goto L_0x0182
        L_0x0167:
            java.io.PrintStream r7 = java.lang.System.err
            java.lang.StringBuilder r8 = new java.lang.StringBuilder
            java.lang.String r9 = "Failed to load SchemaCodePrinter class "
            r8.<init>(r9)
            java.lang.StringBuilder r0 = r8.append(r0)
            java.lang.String r8 = "; proceeding with default printer"
            java.lang.StringBuilder r0 = r0.append(r8)
            java.lang.String r0 = r0.toString()
            r7.println(r0)
        L_0x0181:
            r7 = 0
        L_0x0182:
            java.lang.String r0 = "name"
            java.lang.String r8 = r14.getOpt(r0)
            java.lang.String r0 = r14.getOpt(r10)
            if (r0 == 0) goto L_0x0190
            r9 = 1
            goto L_0x0191
        L_0x0190:
            r9 = 0
        L_0x0191:
            java.lang.String r0 = r14.getOpt(r11)
            if (r0 == 0) goto L_0x0199
            r10 = 1
            goto L_0x019a
        L_0x0199:
            r10 = 0
        L_0x019a:
            java.lang.String r0 = r14.getOpt(r12)
            if (r0 == 0) goto L_0x01a2
            r11 = 1
            goto L_0x01a3
        L_0x01a2:
            r11 = 0
        L_0x01a3:
            java.lang.String r0 = r14.getOpt(r13)
            if (r0 == 0) goto L_0x01ad
            r0 = r19
            r12 = 1
            goto L_0x01b0
        L_0x01ad:
            r0 = r19
            r12 = 0
        L_0x01b0:
            java.lang.String r0 = r14.getOpt(r0)
            if (r0 == 0) goto L_0x01ba
            r0 = r18
            r13 = 1
            goto L_0x01bd
        L_0x01ba:
            r0 = r18
            r13 = 0
        L_0x01bd:
            java.lang.String r0 = r14.getOpt(r0)
            if (r0 == 0) goto L_0x01c7
            r0 = r16
            r15 = 1
            goto L_0x01ca
        L_0x01c7:
            r0 = r16
            r15 = 0
        L_0x01ca:
            java.lang.String r0 = r14.getOpt(r0)
            if (r0 == 0) goto L_0x01d4
            r0 = r17
            r6 = 1
            goto L_0x01d7
        L_0x01d4:
            r0 = r17
            r6 = 0
        L_0x01d7:
            java.lang.String r0 = r14.getOpt(r0)
            if (r0 == 0) goto L_0x01e0
            r23 = 1
            goto L_0x01e2
        L_0x01e0:
            r23 = 0
        L_0x01e2:
            java.lang.String r0 = "copyann"
            java.lang.String r0 = r14.getOpt(r0)
            if (r0 == 0) goto L_0x01ed
            r24 = 1
            goto L_0x01ef
        L_0x01ed:
            r24 = 0
        L_0x01ef:
            java.lang.String r0 = "allowmdef"
            java.lang.String r0 = r14.getOpt(r0)
            if (r0 != 0) goto L_0x01fd
            java.util.Set r0 = java.util.Collections.emptySet()
            r1 = r0
            goto L_0x020a
        L_0x01fd:
            java.util.HashSet r1 = new java.util.HashSet
            java.lang.String[] r0 = org.apache.xmlbeans.impl.values.XmlListImpl.split_list(r0)
            java.util.List r0 = java.util.Arrays.asList(r0)
            r1.<init>(r0)
        L_0x020a:
            r17 = r7
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>()
            r0 = r21
            java.lang.String r18 = r14.getOpt(r0)
            if (r18 == 0) goto L_0x026a
            r18 = r1
            org.apache.xmlbeans.impl.tool.Extension r1 = new org.apache.xmlbeans.impl.tool.Extension     // Catch:{ ClassNotFoundException -> 0x0241 }
            r1.<init>()     // Catch:{ ClassNotFoundException -> 0x0241 }
            r19 = r5
            java.lang.String r5 = r14.getOpt(r0)     // Catch:{ ClassNotFoundException -> 0x0243 }
            java.lang.Thread r21 = java.lang.Thread.currentThread()     // Catch:{ ClassNotFoundException -> 0x0243 }
            r25 = r15
            java.lang.ClassLoader r15 = r21.getContextClassLoader()     // Catch:{ ClassNotFoundException -> 0x023e }
            r21 = r13
            r13 = 0
            java.lang.Class r5 = java.lang.Class.forName(r5, r13, r15)     // Catch:{ ClassNotFoundException -> 0x0247 }
            r1.setClassName((java.lang.Class<?>) r5)     // Catch:{ ClassNotFoundException -> 0x0247 }
            r7.add(r1)     // Catch:{ ClassNotFoundException -> 0x0247 }
            goto L_0x0272
        L_0x023e:
            r21 = r13
            goto L_0x0247
        L_0x0241:
            r19 = r5
        L_0x0243:
            r21 = r13
            r25 = r15
        L_0x0247:
            java.io.PrintStream r1 = java.lang.System.err
            java.lang.StringBuilder r5 = new java.lang.StringBuilder
            java.lang.String r13 = "Could not find extension class: "
            r5.<init>(r13)
            java.lang.String r0 = r14.getOpt(r0)
            java.lang.StringBuilder r0 = r5.append(r0)
            java.lang.String r5 = "  Is it on your classpath?"
            java.lang.StringBuilder r0 = r0.append(r5)
            java.lang.String r0 = r0.toString()
            r1.println(r0)
            r1 = 1
            java.lang.System.exit(r1)
            goto L_0x0272
        L_0x026a:
            r18 = r1
            r19 = r5
            r21 = r13
            r25 = r15
        L_0x0272:
            int r0 = r7.size()
            if (r0 <= 0) goto L_0x02cc
            r0 = r22
            java.lang.String r1 = r14.getOpt(r0)
            if (r1 == 0) goto L_0x02cc
            r1 = 0
            java.lang.Object r5 = r7.get(r1)
            org.apache.xmlbeans.impl.tool.Extension r5 = (org.apache.xmlbeans.impl.tool.Extension) r5
            java.util.StringTokenizer r1 = new java.util.StringTokenizer
            java.lang.String r0 = r14.getOpt(r0)
            java.lang.String r13 = ";"
            r1.<init>(r0, r13)
        L_0x0292:
            boolean r0 = r1.hasMoreTokens()
            if (r0 == 0) goto L_0x02cc
            java.lang.String r0 = r1.nextToken()
            r13 = 61
            int r13 = r0.indexOf(r13)
            if (r13 >= 0) goto L_0x02b2
            java.io.PrintStream r15 = java.lang.System.err
            r22 = r1
            java.lang.String r1 = "extensionParms should be name=value;name=value"
            r15.println(r1)
            r1 = 1
            java.lang.System.exit(r1)
            goto L_0x02b4
        L_0x02b2:
            r22 = r1
        L_0x02b4:
            r1 = 0
            java.lang.String r15 = r0.substring(r1, r13)
            int r13 = r13 + 1
            java.lang.String r0 = r0.substring(r13)
            org.apache.xmlbeans.impl.tool.Extension$Param r1 = r5.createParam()
            r1.setName(r15)
            r1.setValue(r0)
            r1 = r22
            goto L_0x0292
        L_0x02cc:
            java.lang.String r0 = "d"
            java.lang.String r0 = r14.getOpt(r0)
            if (r0 == 0) goto L_0x02dc
            java.io.File r1 = new java.io.File
            r1.<init>(r0)
            r5 = r20
            goto L_0x02df
        L_0x02dc:
            r5 = r20
            r1 = 0
        L_0x02df:
            java.lang.String r0 = r14.getOpt(r5)
            if (r0 == 0) goto L_0x02eb
            java.io.File r13 = new java.io.File
            r13.<init>(r0)
            goto L_0x02ec
        L_0x02eb:
            r13 = 0
        L_0x02ec:
            if (r6 == 0) goto L_0x02f3
            if (r0 != 0) goto L_0x02f3
            if (r1 == 0) goto L_0x02f3
            r13 = r1
        L_0x02f3:
            if (r13 == 0) goto L_0x02fd
            if (r1 != 0) goto L_0x02f8
            goto L_0x02fd
        L_0x02f8:
            r20 = r7
            r22 = r12
            goto L_0x0324
        L_0x02fd:
            java.io.File r0 = org.apache.xmlbeans.impl.tool.SchemaCodeGenerator.createTempDir()     // Catch:{ IOException -> 0x0306 }
            r20 = r7
            r22 = r12
            goto L_0x0325
        L_0x0306:
            r0 = move-exception
            r15 = r0
            java.io.PrintStream r0 = java.lang.System.err
            r20 = r7
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r22 = r12
            java.lang.String r12 = "Error creating temp dir "
            r7.<init>(r12)
            java.lang.StringBuilder r7 = r7.append(r15)
            java.lang.String r7 = r7.toString()
            r0.println(r7)
            r7 = 1
            java.lang.System.exit(r7)
        L_0x0324:
            r0 = 0
        L_0x0325:
            if (r4 != 0) goto L_0x032d
            if (r1 != 0) goto L_0x032d
            if (r6 != 0) goto L_0x032d
            java.lang.String r4 = "xmltypes.jar"
        L_0x032d:
            if (r4 == 0) goto L_0x0335
            java.io.File r7 = new java.io.File
            r7.<init>(r4)
            goto L_0x0336
        L_0x0335:
            r7 = 0
        L_0x0336:
            if (r13 != 0) goto L_0x033c
            java.io.File r13 = org.apache.xmlbeans.impl.common.IOUtil.createDir(r0, r5)
        L_0x033c:
            if (r1 != 0) goto L_0x0344
            java.lang.String r1 = "classes"
            java.io.File r1 = org.apache.xmlbeans.impl.common.IOUtil.createDir(r0, r1)
        L_0x0344:
            java.lang.String r4 = "cp"
            java.lang.String r4 = r14.getOpt(r4)
            if (r4 == 0) goto L_0x037a
            java.lang.String r5 = java.io.File.pathSeparator
            java.lang.String[] r4 = r4.split(r5)
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            int r12 = r4.length
            r15 = 0
        L_0x0359:
            if (r15 >= r12) goto L_0x0370
            r26 = r12
            r12 = r4[r15]
            r27 = r4
            java.io.File r4 = new java.io.File
            r4.<init>(r12)
            r5.add(r4)
            int r15 = r15 + 1
            r12 = r26
            r4 = r27
            goto L_0x0359
        L_0x0370:
            r4 = 0
            java.io.File[] r12 = new java.io.File[r4]
            java.lang.Object[] r4 = r5.toArray(r12)
            java.io.File[] r4 = (java.io.File[]) r4
            goto L_0x037e
        L_0x037a:
            java.io.File[] r4 = org.apache.xmlbeans.impl.tool.CodeGenUtil.systemClasspath()
        L_0x037e:
            java.lang.String r5 = "compiler"
            java.lang.String r5 = r14.getOpt(r5)
            java.lang.String r12 = "jar"
            java.lang.String r12 = r14.getOpt(r12)
            if (r2 == 0) goto L_0x0395
            if (r12 == 0) goto L_0x0395
            java.io.PrintStream r12 = java.lang.System.out
            java.lang.String r15 = "The 'jar' option is no longer supported."
            r12.println(r15)
        L_0x0395:
            java.lang.String r12 = "ms"
            java.lang.String r12 = r14.getOpt(r12)
            java.lang.String r15 = "mx"
            java.lang.String r15 = r14.getOpt(r15)
            r26 = r0
            java.lang.String r0 = ".xsd"
            java.io.File[] r0 = r14.filesEndingWith(r0)
            r27 = r11
            java.lang.String r11 = ".wsdl"
            java.io.File[] r11 = r14.filesEndingWith(r11)
            r28 = r10
            java.lang.String r10 = ".java"
            java.io.File[] r10 = r14.filesEndingWith(r10)
            r29 = r9
            java.lang.String r9 = ".xsdconfig"
            java.io.File[] r9 = r14.filesEndingWith(r9)
            r30 = r3
            java.net.URL[] r3 = r14.getURLs()
            r31 = r6
            int r6 = r0.length
            r32 = r15
            int r15 = r11.length
            int r6 = r6 + r15
            int r15 = r3.length
            int r6 = r6 + r15
            if (r6 != 0) goto L_0x03dd
            java.io.PrintStream r6 = java.lang.System.out
            java.lang.String r15 = "Could not find any xsd or wsdl files to process."
            r6.println(r15)
            r6 = 0
            java.lang.System.exit(r6)
        L_0x03dd:
            java.io.File r6 = r14.getBaseDir()
            if (r6 != 0) goto L_0x03e7
            r34 = r12
            r15 = 0
            goto L_0x03ed
        L_0x03e7:
            java.net.URI r15 = r6.toURI()
            r34 = r12
        L_0x03ed:
            org.apache.xmlbeans.impl.common.XmlErrorPrinter r12 = new org.apache.xmlbeans.impl.common.XmlErrorPrinter
            r12.<init>(r2, r15)
            java.lang.String r15 = "catalog"
            java.lang.String r15 = r14.getOpt(r15)
            r33 = r15
            java.lang.String r15 = "partialMethods"
            java.lang.String r14 = r14.getOpt(r15)
            org.apache.xmlbeans.impl.tool.Parameters r15 = new org.apache.xmlbeans.impl.tool.Parameters
            r15.<init>()
            r15.setBaseDir(r6)
            r15.setXsdFiles(r0)
            r15.setWsdlFiles(r11)
            r15.setJavaFiles(r10)
            r15.setConfigFiles(r9)
            r15.setUrlFiles(r3)
            r15.setClasspath(r4)
            r15.setOutputJar(r7)
            r15.setName(r8)
            r15.setSrcDir(r13)
            r15.setClassesDir(r1)
            r15.setCompiler(r5)
            r0 = r34
            r15.setMemoryInitialSize(r0)
            r0 = r32
            r15.setMemoryMaximumSize(r0)
            r1 = r31
            r15.setNojavac(r1)
            r1 = r30
            r15.setQuiet(r1)
            r15.setVerbose(r2)
            r1 = r29
            r15.setDownload(r1)
            r1 = r28
            r15.setNoUpa(r1)
            r1 = r27
            r15.setNoPvr(r1)
            r1 = r22
            r15.setNoAnn(r1)
            r1 = r21
            r15.setNoVDoc(r1)
            r1 = r25
            r15.setNoExt(r1)
            r1 = r23
            r15.setDebug(r1)
            r15.setErrorListener(r12)
            r1 = r19
            r15.setRepackage(r1)
            r1 = r20
            r15.setExtensions(r1)
            r1 = r18
            r15.setMdefNamespaces(r1)
            r0 = r33
            r15.setCatalogFile(r0)
            r6 = r17
            r15.setSchemaCodePrinter(r6)
            java.util.Set r0 = parsePartialMethods(r14)
            r15.setPartialMethods(r0)
            r1 = r24
            r15.setCopyAnn(r1)
            boolean r0 = compile(r15)
            if (r26 == 0) goto L_0x0494
            org.apache.xmlbeans.impl.tool.SchemaCodeGenerator.tryHardToDelete(r26)
        L_0x0494:
            if (r0 != 0) goto L_0x049a
            r1 = 1
            java.lang.System.exit(r1)
        L_0x049a:
            r1 = 0
            java.lang.System.exit(r1)
            return
        L_0x049f:
            r1 = 0
            printUsage()
            java.lang.System.exit(r1)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.apache.xmlbeans.impl.tool.SchemaCompiler.main(java.lang.String[]):void");
    }

    /* JADX WARNING: Code restructure failed: missing block: B:80:0x01c1, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:88:0x01fe, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:91:?, code lost:
        org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, org.apache.xmlbeans.XmlErrorCodes.CANNOT_LOAD_FILE, new java.lang.Object[]{r19, r6, r0.getMessage()}, r6);
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x01fe A[ExcHandler: Exception (r0v15 'e' java.lang.Exception A[CUSTOM_DECLARE]), Splitter:B:71:0x019b] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private static org.apache.xmlbeans.SchemaTypeSystem loadTypeSystem(java.lang.String r20, java.io.File[] r21, java.io.File[] r22, java.net.URL[] r23, java.io.File[] r24, java.io.File[] r25, org.apache.xmlbeans.ResourceLoader r26, boolean r27, boolean r28, boolean r29, boolean r30, boolean r31, boolean r32, java.util.Set<java.lang.String> r33, java.io.File r34, java.util.Map<java.lang.String, java.lang.String> r35, java.util.Collection<org.apache.xmlbeans.XmlError> r36, java.io.File r37, org.xml.sax.EntityResolver r38, java.io.File[] r39) {
        /*
            r1 = r21
            r2 = r22
            r3 = r23
            r4 = r24
            r5 = r31
            r6 = r33
            r7 = r38
            java.lang.String r8 = "xsd config"
            java.lang.String r9 = "wsdl"
            org.apache.xmlbeans.impl.common.XmlErrorWatcher r10 = new org.apache.xmlbeans.impl.common.XmlErrorWatcher
            r0 = r36
            r10.<init>(r0)
            org.apache.xmlbeans.impl.schema.StscState r0 = org.apache.xmlbeans.impl.schema.StscState.start()
            r0.setErrorListener(r10)     // Catch:{ all -> 0x0299 }
            java.lang.Class<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument> r0 = org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument.class
            java.lang.ClassLoader r0 = r0.getClassLoader()     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.SchemaTypeLoader r11 = org.apache.xmlbeans.XmlBeans.typeLoaderForClassLoader(r0)     // Catch:{ all -> 0x0299 }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ all -> 0x0299 }
            r12.<init>()     // Catch:{ all -> 0x0299 }
            java.lang.String r13 = "invalid.document.type"
            java.lang.String r15 = "cannot.load.file"
            if (r1 == 0) goto L_0x00a3
            int r14 = r1.length     // Catch:{ all -> 0x0299 }
            r6 = 0
        L_0x0037:
            if (r6 >= r14) goto L_0x00a3
            r18 = r14
            r14 = r1[r6]     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.XmlOptions r0 = new org.apache.xmlbeans.XmlOptions     // Catch:{ XmlException -> 0x0090, Exception -> 0x0076 }
            r0.<init>()     // Catch:{ XmlException -> 0x0090, Exception -> 0x0076 }
            r0.setLoadLineNumbers()     // Catch:{ XmlException -> 0x0090, Exception -> 0x0076 }
            r0.setLoadMessageDigest()     // Catch:{ XmlException -> 0x0090, Exception -> 0x0076 }
            r0.setEntityResolver(r7)     // Catch:{ XmlException -> 0x0090, Exception -> 0x0076 }
            r1 = 0
            org.apache.xmlbeans.XmlObject r0 = r11.parse((java.io.File) r14, (org.apache.xmlbeans.SchemaType) r1, (org.apache.xmlbeans.XmlOptions) r0)     // Catch:{ XmlException -> 0x0090, Exception -> 0x0076 }
            boolean r1 = r0 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument     // Catch:{ XmlException -> 0x0090, Exception -> 0x0076 }
            if (r1 != 0) goto L_0x0066
            r19 = r8
            r1 = 2
            java.lang.Object[] r8 = new java.lang.Object[r1]     // Catch:{ XmlException -> 0x0074, Exception -> 0x0072 }
            r1 = 0
            r8[r1] = r14     // Catch:{ XmlException -> 0x0074, Exception -> 0x0072 }
            java.lang.String r1 = "schema"
            r16 = 1
            r8[r16] = r1     // Catch:{ XmlException -> 0x0074, Exception -> 0x0072 }
            org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, (java.lang.String) r13, (java.lang.Object[]) r8, (org.apache.xmlbeans.XmlObject) r0)     // Catch:{ XmlException -> 0x0074, Exception -> 0x0072 }
            goto L_0x009a
        L_0x0066:
            r19 = r8
            java.lang.String r1 = r14.toString()     // Catch:{ XmlException -> 0x0074, Exception -> 0x0072 }
            org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument r0 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument) r0     // Catch:{ XmlException -> 0x0074, Exception -> 0x0072 }
            addSchema(r1, r0, r10, r5, r12)     // Catch:{ XmlException -> 0x0074, Exception -> 0x0072 }
            goto L_0x009a
        L_0x0072:
            r0 = move-exception
            goto L_0x0079
        L_0x0074:
            r0 = move-exception
            goto L_0x0093
        L_0x0076:
            r0 = move-exception
            r19 = r8
        L_0x0079:
            r1 = 3
            java.lang.Object[] r8 = new java.lang.Object[r1]     // Catch:{ all -> 0x0299 }
            java.lang.String r1 = "xsd"
            r17 = 0
            r8[r17] = r1     // Catch:{ all -> 0x0299 }
            r1 = 1
            r8[r1] = r14     // Catch:{ all -> 0x0299 }
            java.lang.String r0 = r0.getMessage()     // Catch:{ all -> 0x0299 }
            r1 = 2
            r8[r1] = r0     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, (java.lang.String) r15, (java.lang.Object[]) r8, (java.io.File) r14)     // Catch:{ all -> 0x0299 }
            goto L_0x009a
        L_0x0090:
            r0 = move-exception
            r19 = r8
        L_0x0093:
            org.apache.xmlbeans.XmlError r0 = r0.getError()     // Catch:{ all -> 0x0299 }
            r10.add((org.apache.xmlbeans.XmlError) r0)     // Catch:{ all -> 0x0299 }
        L_0x009a:
            int r6 = r6 + 1
            r1 = r21
            r14 = r18
            r8 = r19
            goto L_0x0037
        L_0x00a3:
            r19 = r8
            java.lang.String r1 = "http://www.apache.org/internal/xmlbeans/wsdlsubst"
            java.lang.String r6 = "http://schemas.xmlsoap.org/wsdl/"
            if (r2 == 0) goto L_0x010b
            int r8 = r2.length     // Catch:{ all -> 0x0299 }
            r14 = 0
        L_0x00ad:
            if (r14 >= r8) goto L_0x010b
            r18 = r8
            r8 = r2[r14]     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.XmlOptions r0 = new org.apache.xmlbeans.XmlOptions     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            r0.<init>()     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            r0.setLoadLineNumbers()     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            java.util.Map r2 = java.util.Collections.singletonMap(r6, r1)     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            r0.setLoadSubstituteNamespaces(r2)     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            r0.setEntityResolver(r7)     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            r2 = 0
            org.apache.xmlbeans.XmlObject r0 = r11.parse((java.io.File) r8, (org.apache.xmlbeans.SchemaType) r2, (org.apache.xmlbeans.XmlOptions) r0)     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            boolean r2 = r0 instanceof org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            if (r2 != 0) goto L_0x00db
            r2 = 2
            java.lang.Object[] r4 = new java.lang.Object[r2]     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            r2 = 0
            r4[r2] = r8     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            r2 = 1
            r4[r2] = r9     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, (java.lang.String) r13, (java.lang.Object[]) r4, (org.apache.xmlbeans.XmlObject) r0)     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            goto L_0x0102
        L_0x00db:
            java.lang.String r2 = r8.toString()     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument r0 = (org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument) r0     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            addWsdlSchemas(r2, r0, r10, r5, r12)     // Catch:{ XmlException -> 0x00fa, Exception -> 0x00e5 }
            goto L_0x0102
        L_0x00e5:
            r0 = move-exception
            r2 = 3
            java.lang.Object[] r4 = new java.lang.Object[r2]     // Catch:{ all -> 0x0299 }
            r2 = 0
            r4[r2] = r9     // Catch:{ all -> 0x0299 }
            r2 = 1
            r4[r2] = r8     // Catch:{ all -> 0x0299 }
            java.lang.String r0 = r0.getMessage()     // Catch:{ all -> 0x0299 }
            r2 = 2
            r4[r2] = r0     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, (java.lang.String) r15, (java.lang.Object[]) r4, (java.io.File) r8)     // Catch:{ all -> 0x0299 }
            goto L_0x0102
        L_0x00fa:
            r0 = move-exception
            org.apache.xmlbeans.XmlError r0 = r0.getError()     // Catch:{ all -> 0x0299 }
            r10.add((org.apache.xmlbeans.XmlError) r0)     // Catch:{ all -> 0x0299 }
        L_0x0102:
            int r14 = r14 + 1
            r2 = r22
            r4 = r24
            r8 = r18
            goto L_0x00ad
        L_0x010b:
            if (r3 == 0) goto L_0x0179
            int r2 = r3.length     // Catch:{ all -> 0x0299 }
            r4 = 0
        L_0x010f:
            if (r4 >= r2) goto L_0x0179
            r8 = r3[r4]     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.XmlOptions r0 = new org.apache.xmlbeans.XmlOptions     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            r0.<init>()     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            r0.setLoadLineNumbers()     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            java.util.Map r9 = java.util.Collections.singletonMap(r6, r1)     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            r0.setLoadSubstituteNamespaces(r9)     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            r0.setEntityResolver(r7)     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            r9 = 0
            org.apache.xmlbeans.XmlObject r0 = r11.parse((java.net.URL) r8, (org.apache.xmlbeans.SchemaType) r9, (org.apache.xmlbeans.XmlOptions) r0)     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            boolean r9 = r0 instanceof org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            if (r9 == 0) goto L_0x0138
            java.lang.String r9 = r8.toString()     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument r0 = (org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument) r0     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            addWsdlSchemas(r9, r0, r10, r5, r12)     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            goto L_0x0176
        L_0x0138:
            boolean r9 = r0 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            if (r9 == 0) goto L_0x0146
            java.lang.String r9 = r8.toString()     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument r0 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument) r0     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            addSchema(r9, r0, r10, r5, r12)     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            goto L_0x0176
        L_0x0146:
            r9 = 2
            java.lang.Object[] r14 = new java.lang.Object[r9]     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            r9 = 0
            r14[r9] = r8     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            java.lang.String r9 = "wsdl or schema"
            r16 = 1
            r14[r16] = r9     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, (java.lang.String) r13, (java.lang.Object[]) r14, (org.apache.xmlbeans.XmlObject) r0)     // Catch:{ XmlException -> 0x016e, Exception -> 0x0156 }
            goto L_0x0176
        L_0x0156:
            r0 = move-exception
            r9 = 3
            java.lang.Object[] r14 = new java.lang.Object[r9]     // Catch:{ all -> 0x0299 }
            java.lang.String r9 = "url"
            r17 = 0
            r14[r17] = r9     // Catch:{ all -> 0x0299 }
            r9 = 1
            r14[r9] = r8     // Catch:{ all -> 0x0299 }
            java.lang.String r0 = r0.getMessage()     // Catch:{ all -> 0x0299 }
            r9 = 2
            r14[r9] = r0     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, (java.lang.String) r15, (java.lang.Object[]) r14, (java.net.URL) r8)     // Catch:{ all -> 0x0299 }
            goto L_0x0176
        L_0x016e:
            r0 = move-exception
            org.apache.xmlbeans.XmlError r0 = r0.getError()     // Catch:{ all -> 0x0299 }
            r10.add((org.apache.xmlbeans.XmlError) r0)     // Catch:{ all -> 0x0299 }
        L_0x0176:
            int r4 = r4 + 1
            goto L_0x010f
        L_0x0179:
            r1 = 0
            org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] r0 = new org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument.Schema[r1]     // Catch:{ all -> 0x0299 }
            java.lang.Object[] r0 = r12.toArray(r0)     // Catch:{ all -> 0x0299 }
            r1 = r0
            org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] r1 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument.Schema[]) r1     // Catch:{ all -> 0x0299 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ all -> 0x0299 }
            r2.<init>()     // Catch:{ all -> 0x0299 }
            r3 = r24
            if (r3 == 0) goto L_0x0221
            if (r32 == 0) goto L_0x0195
            java.io.PrintStream r0 = java.lang.System.out     // Catch:{ all -> 0x0299 }
            java.lang.String r4 = "Pre/Post and Interface extensions will be ignored."
            r0.println(r4)     // Catch:{ all -> 0x0299 }
        L_0x0195:
            int r4 = r3.length     // Catch:{ all -> 0x0299 }
            r5 = 0
        L_0x0197:
            if (r5 >= r4) goto L_0x0221
            r6 = r3[r5]     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.XmlOptions r0 = new org.apache.xmlbeans.XmlOptions     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r0.<init>()     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r0.setLoadLineNumbers()     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r0.setEntityResolver(r7)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            java.util.Map<java.lang.String, java.lang.String> r8 = MAP_COMPATIBILITY_CONFIG_URIS     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r0.setLoadSubstituteNamespaces(r8)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r8 = 0
            org.apache.xmlbeans.XmlObject r0 = r11.parse((java.io.File) r6, (org.apache.xmlbeans.SchemaType) r8, (org.apache.xmlbeans.XmlOptions) r0)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            boolean r8 = r0 instanceof org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            if (r8 != 0) goto L_0x01c5
            r8 = 2
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ XmlException -> 0x01c1, Exception -> 0x01fe }
            r8 = 0
            r9[r8] = r6     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r8 = 1
            r9[r8] = r19     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, (java.lang.String) r13, (java.lang.Object[]) r9, (org.apache.xmlbeans.XmlObject) r0)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            goto L_0x01fb
        L_0x01c1:
            r0 = move-exception
            r12 = r8
            r8 = 3
            goto L_0x0216
        L_0x01c5:
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r8.<init>()     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            java.lang.String r9 = "Loading config file "
            java.lang.StringBuilder r8 = r8.append(r9)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            java.lang.StringBuilder r8 = r8.append(r6)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            java.lang.String r8 = r8.toString()     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            org.apache.xmlbeans.impl.schema.StscState.addInfo(r10, r8)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            org.apache.xmlbeans.XmlOptions r8 = new org.apache.xmlbeans.XmlOptions     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r8.<init>()     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            org.apache.xmlbeans.XmlOptions r8 = r8.setErrorListener(r10)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            boolean r8 = r0.validate(r8)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            if (r8 == 0) goto L_0x01fb
            org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument r0 = (org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument) r0     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config r0 = r0.getConfig()     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r2.add(r0)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            if (r32 == 0) goto L_0x01fb
            r8 = 0
            org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig[] r9 = new org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig[r8]     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
            r0.setExtensionArray(r9)     // Catch:{ XmlException -> 0x0213, Exception -> 0x01fe }
        L_0x01fb:
            r8 = 3
            r12 = 2
            goto L_0x021d
        L_0x01fe:
            r0 = move-exception
            r8 = 3
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ all -> 0x0299 }
            r12 = 0
            r9[r12] = r19     // Catch:{ all -> 0x0299 }
            r12 = 1
            r9[r12] = r6     // Catch:{ all -> 0x0299 }
            java.lang.String r0 = r0.getMessage()     // Catch:{ all -> 0x0299 }
            r12 = 2
            r9[r12] = r0     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.impl.schema.StscState.addError((java.util.Collection<org.apache.xmlbeans.XmlError>) r10, (java.lang.String) r15, (java.lang.Object[]) r9, (java.io.File) r6)     // Catch:{ all -> 0x0299 }
            goto L_0x021d
        L_0x0213:
            r0 = move-exception
            r8 = 3
            r12 = 2
        L_0x0216:
            org.apache.xmlbeans.XmlError r0 = r0.getError()     // Catch:{ all -> 0x0299 }
            r10.add((org.apache.xmlbeans.XmlError) r0)     // Catch:{ all -> 0x0299 }
        L_0x021d:
            int r5 = r5 + 1
            goto L_0x0197
        L_0x0221:
            r3 = 0
            org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config[] r0 = new org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument.Config[r3]     // Catch:{ all -> 0x0299 }
            java.lang.Object[] r0 = r2.toArray(r0)     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config[] r0 = (org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument.Config[]) r0     // Catch:{ all -> 0x0299 }
            r2 = r26
            r3 = 0
            org.apache.xmlbeans.SchemaTypeLoader r2 = org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl.build(r3, r2, r3)     // Catch:{ all -> 0x0299 }
            if (r34 == 0) goto L_0x0238
            java.net.URI r14 = r34.toURI()     // Catch:{ all -> 0x0299 }
            goto L_0x0239
        L_0x0238:
            r14 = r3
        L_0x0239:
            org.apache.xmlbeans.XmlOptions r3 = new org.apache.xmlbeans.XmlOptions     // Catch:{ all -> 0x0299 }
            r3.<init>()     // Catch:{ all -> 0x0299 }
            if (r27 == 0) goto L_0x0243
            r3.setCompileDownloadUrls()     // Catch:{ all -> 0x0299 }
        L_0x0243:
            if (r28 == 0) goto L_0x0248
            r3.setCompileNoUpaRule()     // Catch:{ all -> 0x0299 }
        L_0x0248:
            if (r29 == 0) goto L_0x024d
            r3.setCompileNoPvrRule()     // Catch:{ all -> 0x0299 }
        L_0x024d:
            if (r30 == 0) goto L_0x0252
            r3.setCompileNoAnnotations()     // Catch:{ all -> 0x0299 }
        L_0x0252:
            r4 = r33
            if (r4 == 0) goto L_0x0259
            r3.setCompileMdefNamespaces(r4)     // Catch:{ all -> 0x0299 }
        L_0x0259:
            r3.setCompileNoValidation()     // Catch:{ all -> 0x0299 }
            r3.setEntityResolver(r7)     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters     // Catch:{ all -> 0x0299 }
            r4.<init>()     // Catch:{ all -> 0x0299 }
            r5 = r20
            r4.setName(r5)     // Catch:{ all -> 0x0299 }
            r4.setSchemas(r1)     // Catch:{ all -> 0x0299 }
            r1 = r25
            r5 = r39
            org.apache.xmlbeans.BindingConfig r0 = org.apache.xmlbeans.impl.config.BindingConfigImpl.forConfigDocuments(r0, r1, r5)     // Catch:{ all -> 0x0299 }
            r4.setConfig(r0)     // Catch:{ all -> 0x0299 }
            r4.setLinkTo(r2)     // Catch:{ all -> 0x0299 }
            r4.setOptions(r3)     // Catch:{ all -> 0x0299 }
            r4.setErrorListener(r10)     // Catch:{ all -> 0x0299 }
            r1 = 1
            r4.setJavaize(r1)     // Catch:{ all -> 0x0299 }
            r4.setBaseURI(r14)     // Catch:{ all -> 0x0299 }
            r1 = r35
            r4.setSourcesToCopyMap(r1)     // Catch:{ all -> 0x0299 }
            r1 = r37
            r4.setSchemasDir(r1)     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.SchemaTypeSystem r0 = org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler.compile(r4)     // Catch:{ all -> 0x0299 }
            org.apache.xmlbeans.impl.schema.StscState.end()
            return r0
        L_0x0299:
            r0 = move-exception
            org.apache.xmlbeans.impl.schema.StscState.end()
            throw r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.apache.xmlbeans.impl.tool.SchemaCompiler.loadTypeSystem(java.lang.String, java.io.File[], java.io.File[], java.net.URL[], java.io.File[], java.io.File[], org.apache.xmlbeans.ResourceLoader, boolean, boolean, boolean, boolean, boolean, boolean, java.util.Set, java.io.File, java.util.Map, java.util.Collection, java.io.File, org.xml.sax.EntityResolver, java.io.File[]):org.apache.xmlbeans.SchemaTypeSystem");
    }

    private static void addSchema(String str, SchemaDocument schemaDocument, XmlErrorWatcher xmlErrorWatcher, boolean z, List<SchemaDocument.Schema> list) {
        StscState.addInfo(xmlErrorWatcher, "Loading schema file " + str);
        XmlOptions errorListener = new XmlOptions().setErrorListener(xmlErrorWatcher);
        if (z) {
            errorListener.setValidateTreatLaxAsSkip();
        }
        if (schemaDocument.validate(errorListener)) {
            list.add(schemaDocument.getSchema());
        }
    }

    private static void addWsdlSchemas(String str, DefinitionsDocument definitionsDocument, XmlErrorWatcher xmlErrorWatcher, boolean z, List<SchemaDocument.Schema> list) {
        String str2 = str;
        DefinitionsDocument definitionsDocument2 = definitionsDocument;
        XmlErrorWatcher xmlErrorWatcher2 = xmlErrorWatcher;
        if (wsdlContainsEncoded(definitionsDocument)) {
            StscState.addWarning((Collection<XmlError>) xmlErrorWatcher2, "The WSDL " + str2 + " uses SOAP encoding. SOAP encoding is not compatible with literal XML Schema.", 60, (XmlObject) definitionsDocument2);
        }
        StscState.addInfo(xmlErrorWatcher2, "Loading wsdl file " + str2);
        XmlOptions errorListener = new XmlOptions().setErrorListener(xmlErrorWatcher2);
        if (z) {
            errorListener.setValidateTreatLaxAsSkip();
        }
        int i = 0;
        for (XmlObject selectPath : definitionsDocument.getDefinitions().getTypesArray()) {
            SchemaDocument.Schema[] schemaArr = (SchemaDocument.Schema[]) selectPath.selectPath("declare namespace xs=\"http://www.w3.org/2001/XMLSchema\" xs:schema");
            if (schemaArr.length == 0) {
                StscState.addWarning((Collection<XmlError>) xmlErrorWatcher2, "The WSDL " + str2 + " did not have any schema documents in namespace 'http://www.w3.org/2001/XMLSchema'", 60, (XmlObject) definitionsDocument2);
            } else {
                for (SchemaDocument.Schema schema : schemaArr) {
                    if (schema.validate(errorListener)) {
                        i++;
                        list.add(schema);
                    } else {
                        List<SchemaDocument.Schema> list2 = list;
                    }
                }
            }
            List<SchemaDocument.Schema> list3 = list;
        }
        StscState.addInfo(xmlErrorWatcher2, "Processing " + i + " schema(s) in " + str2);
    }

    /*  JADX ERROR: JadxRuntimeException in pass: IfRegionVisitor
        jadx.core.utils.exceptions.JadxRuntimeException: Don't wrap MOVE or CONST insns: 0x025b: MOVE  (r2v6 java.io.File) = (r45v0 java.io.File)
        	at jadx.core.dex.instructions.args.InsnArg.wrapArg(InsnArg.java:164)
        	at jadx.core.dex.visitors.shrink.CodeShrinkVisitor.assignInline(CodeShrinkVisitor.java:133)
        	at jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(CodeShrinkVisitor.java:118)
        	at jadx.core.dex.visitors.shrink.CodeShrinkVisitor.shrinkBlock(CodeShrinkVisitor.java:65)
        	at jadx.core.dex.visitors.shrink.CodeShrinkVisitor.shrinkMethod(CodeShrinkVisitor.java:43)
        	at jadx.core.dex.visitors.regions.TernaryMod.makeTernaryInsn(TernaryMod.java:122)
        	at jadx.core.dex.visitors.regions.TernaryMod.visitRegion(TernaryMod.java:34)
        	at jadx.core.dex.visitors.regions.DepthRegionTraversal.traverseIterativeStepInternal(DepthRegionTraversal.java:73)
        	at jadx.core.dex.visitors.regions.DepthRegionTraversal.traverseIterativeStepInternal(DepthRegionTraversal.java:78)
        	at jadx.core.dex.visitors.regions.DepthRegionTraversal.traverseIterative(DepthRegionTraversal.java:27)
        	at jadx.core.dex.visitors.regions.IfRegionVisitor.visit(IfRegionVisitor.java:31)
        */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x02a9 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:74:0x02ba  */
    public static boolean compile(org.apache.xmlbeans.impl.tool.Parameters r49) {
        /*
            java.io.File r0 = r49.getBaseDir()
            java.io.File[] r2 = r49.getXsdFiles()
            java.io.File[] r3 = r49.getWsdlFiles()
            java.net.URL[] r4 = r49.getUrlFiles()
            java.io.File[] r21 = r49.getJavaFiles()
            java.io.File[] r5 = r49.getConfigFiles()
            java.io.File[] r15 = r49.getClasspath()
            java.io.File r14 = r49.getOutputJar()
            java.lang.String r1 = r49.getName()
            java.io.File r13 = r49.getSrcDir()
            java.io.File r12 = r49.getClassesDir()
            java.lang.String r22 = r49.getCompiler()
            java.lang.String r23 = r49.getMemoryInitialSize()
            java.lang.String r24 = r49.getMemoryMaximumSize()
            boolean r25 = r49.isNojavac()
            boolean r26 = r49.isDebug()
            boolean r27 = r49.isVerbose()
            boolean r28 = r49.isQuiet()
            boolean r8 = r49.isDownload()
            boolean r9 = r49.isNoUpa()
            boolean r10 = r49.isNoPvr()
            boolean r11 = r49.isNoAnn()
            boolean r16 = r49.isNoVDoc()
            boolean r19 = r49.isNoExt()
            boolean r29 = r49.isIncrementalSrcGen()
            boolean r7 = r49.isCopyAnn()
            java.util.Collection r6 = r49.getErrorListener()
            r20 = r14
            java.util.Set r14 = r49.getPartialMethods()
            r30 = r14
            java.lang.String r14 = r49.getRepackage()
            if (r14 == 0) goto L_0x00bd
            java.lang.String r17 = org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl.METADATA_PACKAGE_GEN
            org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl.METADATA_PACKAGE_LOAD = r17
            r31 = r7
            org.apache.xmlbeans.impl.repackage.Repackager r7 = new org.apache.xmlbeans.impl.repackage.Repackager
            r7.<init>(r14)
            r32 = r11
            java.lang.StringBuffer r11 = new java.lang.StringBuffer
            r33 = r14
            java.lang.String r14 = org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl.METADATA_PACKAGE_LOAD
            r11.<init>(r14)
            java.lang.StringBuffer r7 = r7.repackage(r11)
            java.lang.String r7 = r7.toString()
            org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl.METADATA_PACKAGE_GEN = r7
            java.io.PrintStream r7 = java.lang.System.out
            java.lang.StringBuilder r11 = new java.lang.StringBuilder
            java.lang.String r14 = "SchemaCompiler  Metadata LOAD:"
            r11.<init>(r14)
            java.lang.String r14 = org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl.METADATA_PACKAGE_LOAD
            java.lang.StringBuilder r11 = r11.append(r14)
            java.lang.String r14 = " GEN:"
            java.lang.StringBuilder r11 = r11.append(r14)
            java.lang.String r14 = org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl.METADATA_PACKAGE_GEN
            java.lang.StringBuilder r11 = r11.append(r14)
            java.lang.String r11 = r11.toString()
            r7.println(r11)
            goto L_0x00c3
        L_0x00bd:
            r31 = r7
            r32 = r11
            r33 = r14
        L_0x00c3:
            org.apache.xmlbeans.SchemaCodePrinter r14 = r49.getSchemaCodePrinter()
            java.util.List r11 = r49.getExtensions()
            java.util.Set r34 = r49.getMdefNamespaces()
            org.xml.sax.EntityResolver r7 = r49.getEntityResolver()
            if (r7 != 0) goto L_0x00de
            java.lang.String r7 = r49.getCatalogFile()
            org.xml.sax.EntityResolver r7 = org.apache.xmlbeans.impl.common.ResolverUtil.resolverForCatalog(r7)
            goto L_0x00e2
        L_0x00de:
            org.xml.sax.EntityResolver r7 = r49.getEntityResolver()
        L_0x00e2:
            r35 = r7
            if (r13 == 0) goto L_0x02be
            if (r12 == 0) goto L_0x02be
            long r36 = java.lang.System.currentTimeMillis()
            if (r0 != 0) goto L_0x00fa
            java.lang.String r0 = "user.dir"
            java.lang.String r0 = org.apache.xmlbeans.SystemProperties.getProperty(r0)
            java.io.File r7 = new java.io.File
            r7.<init>(r0)
            r0 = r7
        L_0x00fa:
            java.util.HashMap r38 = new java.util.HashMap
            r38.<init>()
            r39 = 0
            if (r15 == 0) goto L_0x010b
            org.apache.xmlbeans.impl.schema.PathResourceLoader r7 = new org.apache.xmlbeans.impl.schema.PathResourceLoader
            r7.<init>((java.io.File[]) r15)
            r40 = r7
            goto L_0x010d
        L_0x010b:
            r40 = r39
        L_0x010d:
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            r41 = r11
            java.lang.String r11 = org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl.METADATA_PACKAGE_GEN
            java.lang.StringBuilder r7 = r7.append(r11)
            java.lang.String r11 = "/src"
            java.lang.StringBuilder r7 = r7.append(r11)
            java.lang.String r7 = r7.toString()
            java.io.File r18 = org.apache.xmlbeans.impl.common.IOUtil.createDir(r12, r7)
            org.apache.xmlbeans.impl.common.XmlErrorWatcher r11 = new org.apache.xmlbeans.impl.common.XmlErrorWatcher
            r17 = r11
            r11.<init>(r6)
            r6 = r21
            r42 = r31
            r7 = r40
            r31 = r32
            r43 = r41
            r32 = r11
            r11 = r31
            r41 = r12
            r12 = r16
            r44 = r13
            r13 = r19
            r48 = r14
            r45 = r20
            r46 = r30
            r47 = r33
            r14 = r34
            r30 = r15
            r15 = r0
            r16 = r38
            r19 = r35
            r20 = r30
            org.apache.xmlbeans.SchemaTypeSystem r1 = loadTypeSystem(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20)
            boolean r0 = r32.hasError()
            r0 = r0 ^ 1
            long r2 = java.lang.System.currentTimeMillis()
            java.lang.String r4 = " seconds"
            r15 = 4652007308841189376(0x408f400000000000, double:1000.0)
            if (r28 != 0) goto L_0x018b
            java.io.PrintStream r5 = java.lang.System.out
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            java.lang.String r7 = "Time to build schema type system: "
            r6.<init>(r7)
            long r2 = r2 - r36
            double r2 = (double) r2
            double r2 = r2 / r15
            java.lang.StringBuilder r2 = r6.append(r2)
            java.lang.StringBuilder r2 = r2.append(r4)
            java.lang.String r2 = r2.toString()
            r5.println(r2)
        L_0x018b:
            if (r0 == 0) goto L_0x02a1
            if (r1 == 0) goto L_0x02a1
            long r2 = java.lang.System.currentTimeMillis()
            r0 = r47
            if (r0 != 0) goto L_0x019a
            r9 = r39
            goto L_0x01a0
        L_0x019a:
            org.apache.xmlbeans.impl.repackage.Repackager r5 = new org.apache.xmlbeans.impl.repackage.Repackager
            r5.<init>(r0)
            r9 = r5
        L_0x01a0:
            org.apache.xmlbeans.impl.util.FilerImpl r0 = new org.apache.xmlbeans.impl.util.FilerImpl
            r6 = r0
            r7 = r41
            r8 = r44
            r10 = r27
            r11 = r29
            r6.<init>(r7, r8, r9, r10, r11)
            org.apache.xmlbeans.XmlOptions r5 = new org.apache.xmlbeans.XmlOptions
            r5.<init>()
            r6 = r48
            if (r6 == 0) goto L_0x01ba
            r5.setSchemaCodePrinter(r6)
        L_0x01ba:
            r6 = r46
            r5.setCompilePartialMethod(r6)
            r6 = r31
            r5.setCompileNoAnnotations(r6)
            r6 = r42
            r5.setCompileAnnotationAsJavadoc(r6)
            r1.save(r0)
            boolean r5 = org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler.generateTypes(r1, r0, r5)
            if (r29 == 0) goto L_0x01e0
            java.util.HashSet r6 = new java.util.HashSet
            java.util.List r7 = r0.getSourceFiles()
            r6.<init>(r7)
            r7 = r44
            org.apache.xmlbeans.impl.tool.SchemaCodeGenerator.deleteObsoleteFiles(r7, r7, r6)
        L_0x01e0:
            if (r5 == 0) goto L_0x0203
            long r6 = java.lang.System.currentTimeMillis()
            if (r28 != 0) goto L_0x0203
            java.io.PrintStream r8 = java.lang.System.out
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            java.lang.String r10 = "Time to generate code: "
            r9.<init>(r10)
            long r6 = r6 - r2
            double r2 = (double) r6
            double r2 = r2 / r15
            java.lang.StringBuilder r2 = r9.append(r2)
            java.lang.StringBuilder r2 = r2.append(r4)
            java.lang.String r2 = r2.toString()
            r8.println(r2)
        L_0x0203:
            if (r5 == 0) goto L_0x02a4
            if (r25 != 0) goto L_0x02a4
            long r2 = java.lang.System.currentTimeMillis()
            java.util.List r6 = r0.getSourceFiles()
            if (r21 == 0) goto L_0x0218
            java.util.List r0 = java.util.Arrays.asList(r21)
            r6.addAll(r0)
        L_0x0218:
            r7 = r41
            r8 = r30
            r9 = r26
            r10 = r22
            r11 = r23
            r12 = r24
            r13 = r28
            r14 = r27
            boolean r0 = org.apache.xmlbeans.impl.tool.CodeGenUtil.externalCompile(r6, r7, r8, r9, r10, r11, r12, r13, r14)
            r6 = 0
            if (r0 != 0) goto L_0x0231
            r0 = r6
            goto L_0x0232
        L_0x0231:
            r0 = r5
        L_0x0232:
            long r7 = java.lang.System.currentTimeMillis()
            if (r0 == 0) goto L_0x0259
            boolean r5 = r49.isQuiet()
            if (r5 != 0) goto L_0x0259
            java.io.PrintStream r5 = java.lang.System.out
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            java.lang.String r10 = "Time to compile code: "
            r9.<init>(r10)
            long r7 = r7 - r2
            double r2 = (double) r7
            double r2 = r2 / r15
            java.lang.StringBuilder r2 = r9.append(r2)
            java.lang.StringBuilder r2 = r2.append(r4)
            java.lang.String r2 = r2.toString()
            r5.println(r2)
        L_0x0259:
            if (r0 == 0) goto L_0x02a1
            r2 = r45
            if (r2 == 0) goto L_0x02a1
            org.apache.xmlbeans.impl.common.JarHelper r3 = new org.apache.xmlbeans.impl.common.JarHelper     // Catch:{ IOException -> 0x026c }
            r3.<init>()     // Catch:{ IOException -> 0x026c }
            r4 = r41
            r3.jarDir(r4, r2)     // Catch:{ IOException -> 0x026a }
            goto L_0x0284
        L_0x026a:
            r0 = move-exception
            goto L_0x026f
        L_0x026c:
            r0 = move-exception
            r4 = r41
        L_0x026f:
            java.io.PrintStream r3 = java.lang.System.err
            java.lang.StringBuilder r5 = new java.lang.StringBuilder
            java.lang.String r7 = "IO Error "
            r5.<init>(r7)
            java.lang.StringBuilder r0 = r5.append(r0)
            java.lang.String r0 = r0.toString()
            r3.println(r0)
            r0 = r6
        L_0x0284:
            if (r0 == 0) goto L_0x02a7
            boolean r3 = r49.isQuiet()
            if (r3 != 0) goto L_0x02a7
            java.io.PrintStream r3 = java.lang.System.out
            java.lang.StringBuilder r5 = new java.lang.StringBuilder
            java.lang.String r6 = "Compiled types to: "
            r5.<init>(r6)
            java.lang.StringBuilder r2 = r5.append(r2)
            java.lang.String r2 = r2.toString()
            r3.println(r2)
            goto L_0x02a7
        L_0x02a1:
            r4 = r41
            goto L_0x02a7
        L_0x02a4:
            r4 = r41
            r0 = r5
        L_0x02a7:
            if (r0 != 0) goto L_0x02b3
            if (r28 != 0) goto L_0x02b3
            java.io.PrintStream r1 = java.lang.System.out
            java.lang.String r2 = "BUILD FAILED"
            r1.println(r2)
            goto L_0x02b8
        L_0x02b3:
            r2 = r43
            runExtensions(r2, r1, r4)
        L_0x02b8:
            if (r40 == 0) goto L_0x02bd
            r40.close()
        L_0x02bd:
            return r0
        L_0x02be:
            java.lang.IllegalArgumentException r0 = new java.lang.IllegalArgumentException
            java.lang.String r1 = "src and class gen directories may not be null."
            r0.<init>(r1)
            throw r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.apache.xmlbeans.impl.tool.SchemaCompiler.compile(org.apache.xmlbeans.impl.tool.Parameters):boolean");
    }

    static Set<XmlOptions.BeanMethod> parsePartialMethods(String str) {
        HashSet hashSet = new HashSet();
        if (str != null) {
            for (String str2 : str.split(",")) {
                if (Rule.ALL.equals(str2)) {
                    hashSet.addAll(Arrays.asList(XmlOptions.BeanMethod.values()));
                } else {
                    boolean startsWith = str2.startsWith(ProcessIdUtil.DEFAULT_PROCESSID);
                    XmlOptions.BeanMethod valueOf = XmlOptions.BeanMethod.valueOf(str2.substring(startsWith ? 1 : 0));
                    if (startsWith) {
                        hashSet.remove(valueOf);
                    } else {
                        hashSet.add(valueOf);
                    }
                }
            }
        }
        if (hashSet.isEmpty()) {
            return null;
        }
        return hashSet;
    }

    private static void runExtensions(List<Extension> list, SchemaTypeSystem schemaTypeSystem, File file) {
        String str;
        if (list != null && list.size() > 0) {
            try {
                str = file.getCanonicalPath();
            } catch (IOException unused) {
                System.out.println("WARNING: Unable to get the path for schema jar file");
                str = file.getAbsolutePath();
            }
            for (Extension next : list) {
                try {
                    SchemaCompilerExtension schemaCompilerExtension = (SchemaCompilerExtension) next.getClassName().getDeclaredConstructor(new Class[0]).newInstance(new Object[0]);
                    System.out.println("Running Extension: " + schemaCompilerExtension.getExtensionName());
                    HashMap hashMap = new HashMap();
                    for (Extension.Param next2 : next.getParams()) {
                        hashMap.put(next2.getName(), next2.getValue());
                    }
                    hashMap.put("classesDir", str);
                    schemaCompilerExtension.schemaCompilerExtension(schemaTypeSystem, hashMap);
                } catch (InstantiationException | NoSuchMethodException unused2) {
                    System.out.println("UNABLE to instantiate schema compiler extension:" + next.getClassName().getName());
                    System.out.println("EXTENSION Class was not run");
                    return;
                } catch (IllegalAccessException | InvocationTargetException unused3) {
                    System.out.println("ILLEGAL ACCESS Exception when attempting to instantiate schema compiler extension: " + next.getClassName().getName());
                    System.out.println("EXTENSION Class was not run");
                    return;
                }
            }
        }
    }

    private static boolean wsdlContainsEncoded(XmlObject xmlObject) {
        for (XmlObject xmlObject2 : xmlObject.selectPath("declare namespace soap='http://schemas.xmlsoap.org/wsdl/soap/' .//soap:body/@use|.//soap:header/@use|.//soap:fault/@use")) {
            if ("encoded".equals(((SimpleValue) xmlObject2).getStringValue())) {
                return true;
            }
        }
        return false;
    }
}
