package com.google.android.gms.internal.mlkit_vision_barcode;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

/* compiled from: com.google.android.gms:play-services-mlkit-barcode-scanning@@18.3.0 */
final class zzkh implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzkh zza = new zzkh();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzba;
    private static final FieldDescriptor zzbb;
    private static final FieldDescriptor zzbc;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzfc zzfc = new zzfc();
        zzfc.zza(1);
        zzb = builder.withProperty(zzfc.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzfc zzfc2 = new zzfc();
        zzfc2.zza(2);
        zzc = builder2.withProperty(zzfc2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzfc zzfc3 = new zzfc();
        zzfc3.zza(37);
        zzd = builder3.withProperty(zzfc3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzfc zzfc4 = new zzfc();
        zzfc4.zza(61);
        zze = builder4.withProperty(zzfc4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzfc zzfc5 = new zzfc();
        zzfc5.zza(3);
        zzf = builder5.withProperty(zzfc5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzfc zzfc6 = new zzfc();
        zzfc6.zza(20);
        zzg = builder6.withProperty(zzfc6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzfc zzfc7 = new zzfc();
        zzfc7.zza(4);
        zzh = builder7.withProperty(zzfc7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzfc zzfc8 = new zzfc();
        zzfc8.zza(29);
        zzi = builder8.withProperty(zzfc8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzfc zzfc9 = new zzfc();
        zzfc9.zza(5);
        zzj = builder9.withProperty(zzfc9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzfc zzfc10 = new zzfc();
        zzfc10.zza(59);
        zzk = builder10.withProperty(zzfc10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzfc zzfc11 = new zzfc();
        zzfc11.zza(6);
        zzl = builder11.withProperty(zzfc11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzfc zzfc12 = new zzfc();
        zzfc12.zza(79);
        zzm = builder12.withProperty(zzfc12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzfc zzfc13 = new zzfc();
        zzfc13.zza(7);
        zzn = builder13.withProperty(zzfc13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzfc zzfc14 = new zzfc();
        zzfc14.zza(58);
        zzo = builder14.withProperty(zzfc14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzfc zzfc15 = new zzfc();
        zzfc15.zza(48);
        zzp = builder15.withProperty(zzfc15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzfc zzfc16 = new zzfc();
        zzfc16.zza(49);
        zzq = builder16.withProperty(zzfc16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzfc zzfc17 = new zzfc();
        zzfc17.zza(18);
        zzr = builder17.withProperty(zzfc17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzfc zzfc18 = new zzfc();
        zzfc18.zza(26);
        zzs = builder18.withProperty(zzfc18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzfc zzfc19 = new zzfc();
        zzfc19.zza(27);
        zzt = builder19.withProperty(zzfc19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzfc zzfc20 = new zzfc();
        zzfc20.zza(28);
        zzu = builder20.withProperty(zzfc20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzfc zzfc21 = new zzfc();
        zzfc21.zza(44);
        zzv = builder21.withProperty(zzfc21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzfc zzfc22 = new zzfc();
        zzfc22.zza(45);
        zzw = builder22.withProperty(zzfc22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzfc zzfc23 = new zzfc();
        zzfc23.zza(19);
        zzx = builder23.withProperty(zzfc23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzfc zzfc24 = new zzfc();
        zzfc24.zza(21);
        zzy = builder24.withProperty(zzfc24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzfc zzfc25 = new zzfc();
        zzfc25.zza(22);
        zzz = builder25.withProperty(zzfc25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzfc zzfc26 = new zzfc();
        zzfc26.zza(8);
        zzA = builder26.withProperty(zzfc26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzfc zzfc27 = new zzfc();
        zzfc27.zza(9);
        zzB = builder27.withProperty(zzfc27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzfc zzfc28 = new zzfc();
        zzfc28.zza(10);
        zzC = builder28.withProperty(zzfc28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzfc zzfc29 = new zzfc();
        zzfc29.zza(11);
        zzD = builder29.withProperty(zzfc29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzfc zzfc30 = new zzfc();
        zzfc30.zza(12);
        zzE = builder30.withProperty(zzfc30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzfc zzfc31 = new zzfc();
        zzfc31.zza(13);
        zzF = builder31.withProperty(zzfc31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzfc zzfc32 = new zzfc();
        zzfc32.zza(14);
        zzG = builder32.withProperty(zzfc32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzfc zzfc33 = new zzfc();
        zzfc33.zza(15);
        zzH = builder33.withProperty(zzfc33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzfc zzfc34 = new zzfc();
        zzfc34.zza(16);
        zzI = builder34.withProperty(zzfc34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzfc zzfc35 = new zzfc();
        zzfc35.zza(17);
        zzJ = builder35.withProperty(zzfc35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzfc zzfc36 = new zzfc();
        zzfc36.zza(23);
        zzK = builder36.withProperty(zzfc36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzfc zzfc37 = new zzfc();
        zzfc37.zza(24);
        zzL = builder37.withProperty(zzfc37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzfc zzfc38 = new zzfc();
        zzfc38.zza(25);
        zzM = builder38.withProperty(zzfc38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzfc zzfc39 = new zzfc();
        zzfc39.zza(39);
        zzN = builder39.withProperty(zzfc39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzfc zzfc40 = new zzfc();
        zzfc40.zza(40);
        zzO = builder40.withProperty(zzfc40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzfc zzfc41 = new zzfc();
        zzfc41.zza(30);
        zzP = builder41.withProperty(zzfc41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzfc zzfc42 = new zzfc();
        zzfc42.zza(31);
        zzQ = builder42.withProperty(zzfc42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzfc zzfc43 = new zzfc();
        zzfc43.zza(32);
        zzR = builder43.withProperty(zzfc43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzfc zzfc44 = new zzfc();
        zzfc44.zza(33);
        zzS = builder44.withProperty(zzfc44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzfc zzfc45 = new zzfc();
        zzfc45.zza(34);
        zzT = builder45.withProperty(zzfc45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzfc zzfc46 = new zzfc();
        zzfc46.zza(35);
        zzU = builder46.withProperty(zzfc46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzfc zzfc47 = new zzfc();
        zzfc47.zza(36);
        zzV = builder47.withProperty(zzfc47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzfc zzfc48 = new zzfc();
        zzfc48.zza(46);
        zzW = builder48.withProperty(zzfc48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzfc zzfc49 = new zzfc();
        zzfc49.zza(47);
        zzX = builder49.withProperty(zzfc49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzfc zzfc50 = new zzfc();
        zzfc50.zza(69);
        zzY = builder50.withProperty(zzfc50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzfc zzfc51 = new zzfc();
        zzfc51.zza(42);
        zzZ = builder51.withProperty(zzfc51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzfc zzfc52 = new zzfc();
        zzfc52.zza(50);
        zzaa = builder52.withProperty(zzfc52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzfc zzfc53 = new zzfc();
        zzfc53.zza(51);
        zzab = builder53.withProperty(zzfc53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzfc zzfc54 = new zzfc();
        zzfc54.zza(52);
        zzac = builder54.withProperty(zzfc54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzfc zzfc55 = new zzfc();
        zzfc55.zza(53);
        zzad = builder55.withProperty(zzfc55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzfc zzfc56 = new zzfc();
        zzfc56.zza(54);
        zzae = builder56.withProperty(zzfc56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzfc zzfc57 = new zzfc();
        zzfc57.zza(60);
        zzaf = builder57.withProperty(zzfc57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzfc zzfc58 = new zzfc();
        zzfc58.zza(85);
        zzag = builder58.withProperty(zzfc58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzfc zzfc59 = new zzfc();
        zzfc59.zza(86);
        zzah = builder59.withProperty(zzfc59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzfc zzfc60 = new zzfc();
        zzfc60.zza(87);
        zzai = builder60.withProperty(zzfc60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzfc zzfc61 = new zzfc();
        zzfc61.zza(55);
        zzaj = builder61.withProperty(zzfc61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzfc zzfc62 = new zzfc();
        zzfc62.zza(56);
        zzak = builder62.withProperty(zzfc62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzfc zzfc63 = new zzfc();
        zzfc63.zza(57);
        zzal = builder63.withProperty(zzfc63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzfc zzfc64 = new zzfc();
        zzfc64.zza(62);
        zzam = builder64.withProperty(zzfc64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzfc zzfc65 = new zzfc();
        zzfc65.zza(63);
        zzan = builder65.withProperty(zzfc65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzfc zzfc66 = new zzfc();
        zzfc66.zza(64);
        zzao = builder66.withProperty(zzfc66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzfc zzfc67 = new zzfc();
        zzfc67.zza(65);
        zzap = builder67.withProperty(zzfc67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzfc zzfc68 = new zzfc();
        zzfc68.zza(66);
        zzaq = builder68.withProperty(zzfc68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzfc zzfc69 = new zzfc();
        zzfc69.zza(67);
        zzar = builder69.withProperty(zzfc69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzfc zzfc70 = new zzfc();
        zzfc70.zza(68);
        zzas = builder70.withProperty(zzfc70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzfc zzfc71 = new zzfc();
        zzfc71.zza(70);
        zzat = builder71.withProperty(zzfc71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzfc zzfc72 = new zzfc();
        zzfc72.zza(71);
        zzau = builder72.withProperty(zzfc72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzfc zzfc73 = new zzfc();
        zzfc73.zza(72);
        zzav = builder73.withProperty(zzfc73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzfc zzfc74 = new zzfc();
        zzfc74.zza(73);
        zzaw = builder74.withProperty(zzfc74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzfc zzfc75 = new zzfc();
        zzfc75.zza(74);
        zzax = builder75.withProperty(zzfc75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzfc zzfc76 = new zzfc();
        zzfc76.zza(75);
        zzay = builder76.withProperty(zzfc76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzfc zzfc77 = new zzfc();
        zzfc77.zza(76);
        zzaz = builder77.withProperty(zzfc77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzfc zzfc78 = new zzfc();
        zzfc78.zza(77);
        zzaA = builder78.withProperty(zzfc78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzfc zzfc79 = new zzfc();
        zzfc79.zza(78);
        zzaB = builder79.withProperty(zzfc79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzfc zzfc80 = new zzfc();
        zzfc80.zza(80);
        zzaC = builder80.withProperty(zzfc80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzfc zzfc81 = new zzfc();
        zzfc81.zza(81);
        zzaD = builder81.withProperty(zzfc81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzfc zzfc82 = new zzfc();
        zzfc82.zza(82);
        zzaE = builder82.withProperty(zzfc82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzfc zzfc83 = new zzfc();
        zzfc83.zza(83);
        zzaF = builder83.withProperty(zzfc83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzfc zzfc84 = new zzfc();
        zzfc84.zza(84);
        zzaG = builder84.withProperty(zzfc84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzfc zzfc85 = new zzfc();
        zzfc85.zza(88);
        zzaH = builder85.withProperty(zzfc85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzfc zzfc86 = new zzfc();
        zzfc86.zza(89);
        zzaI = builder86.withProperty(zzfc86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzfc zzfc87 = new zzfc();
        zzfc87.zza(90);
        zzaJ = builder87.withProperty(zzfc87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzfc zzfc88 = new zzfc();
        zzfc88.zza(91);
        zzaK = builder88.withProperty(zzfc88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzfc zzfc89 = new zzfc();
        zzfc89.zza(92);
        zzaL = builder89.withProperty(zzfc89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzfc zzfc90 = new zzfc();
        zzfc90.zza(93);
        zzaM = builder90.withProperty(zzfc90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzfc zzfc91 = new zzfc();
        zzfc91.zza(94);
        zzaN = builder91.withProperty(zzfc91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzfc zzfc92 = new zzfc();
        zzfc92.zza(95);
        zzaO = builder92.withProperty(zzfc92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzfc zzfc93 = new zzfc();
        zzfc93.zza(96);
        zzaP = builder93.withProperty(zzfc93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzfc zzfc94 = new zzfc();
        zzfc94.zza(97);
        zzaQ = builder94.withProperty(zzfc94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzfc zzfc95 = new zzfc();
        zzfc95.zza(98);
        zzaR = builder95.withProperty(zzfc95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzfc zzfc96 = new zzfc();
        zzfc96.zza(99);
        zzaS = builder96.withProperty(zzfc96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzfc zzfc97 = new zzfc();
        zzfc97.zza(100);
        zzaT = builder97.withProperty(zzfc97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzfc zzfc98 = new zzfc();
        zzfc98.zza(101);
        zzaU = builder98.withProperty(zzfc98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzfc zzfc99 = new zzfc();
        zzfc99.zza(102);
        zzaV = builder99.withProperty(zzfc99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzfc zzfc100 = new zzfc();
        zzfc100.zza(103);
        zzaW = builder100.withProperty(zzfc100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzfc zzfc101 = new zzfc();
        zzfc101.zza(104);
        zzaX = builder101.withProperty(zzfc101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzfc zzfc102 = new zzfc();
        zzfc102.zza(105);
        zzaY = builder102.withProperty(zzfc102.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzfc zzfc103 = new zzfc();
        zzfc103.zza(106);
        zzaZ = builder103.withProperty(zzfc103.zzb()).build();
        FieldDescriptor.Builder builder104 = FieldDescriptor.builder("lowLightAutoExposureComputationEvent");
        zzfc zzfc104 = new zzfc();
        zzfc104.zza(107);
        zzba = builder104.withProperty(zzfc104.zzb()).build();
        FieldDescriptor.Builder builder105 = FieldDescriptor.builder("lowLightFrameProcessEvent");
        zzfc zzfc105 = new zzfc();
        zzfc105.zza(108);
        zzbb = builder105.withProperty(zzfc105.zzb()).build();
        FieldDescriptor.Builder builder106 = FieldDescriptor.builder("lowLightSceneDetectionEvent");
        zzfc zzfc106 = new zzfc();
        zzfc106.zza(109);
        zzbc = builder106.withProperty(zzfc106.zzb()).build();
    }

    private zzkh() {
    }

    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zzpn zzpn = (zzpn) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, (Object) zzpn.zzg());
        objectEncoderContext.add(zzc, (Object) zzpn.zzc());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, (Object) zzpn.zzb());
        objectEncoderContext.add(zzf, (Object) null);
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) zzpn.zzd());
        objectEncoderContext.add(zzo, (Object) zzpn.zze());
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, (Object) null);
        objectEncoderContext.add(zzO, (Object) null);
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) zzpn.zza());
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, (Object) null);
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
        objectEncoderContext.add(zzag, (Object) null);
        objectEncoderContext.add(zzah, (Object) null);
        objectEncoderContext.add(zzai, (Object) null);
        objectEncoderContext.add(zzaj, (Object) null);
        objectEncoderContext.add(zzak, (Object) null);
        objectEncoderContext.add(zzal, (Object) null);
        objectEncoderContext.add(zzam, (Object) null);
        objectEncoderContext.add(zzan, (Object) null);
        objectEncoderContext.add(zzao, (Object) null);
        objectEncoderContext.add(zzap, (Object) null);
        objectEncoderContext.add(zzaq, (Object) null);
        objectEncoderContext.add(zzar, (Object) null);
        objectEncoderContext.add(zzas, (Object) null);
        objectEncoderContext.add(zzat, (Object) null);
        objectEncoderContext.add(zzau, (Object) null);
        objectEncoderContext.add(zzav, (Object) null);
        objectEncoderContext.add(zzaw, (Object) null);
        objectEncoderContext.add(zzax, (Object) null);
        objectEncoderContext.add(zzay, (Object) null);
        objectEncoderContext.add(zzaz, (Object) null);
        objectEncoderContext.add(zzaA, (Object) null);
        objectEncoderContext.add(zzaB, (Object) null);
        objectEncoderContext.add(zzaC, (Object) null);
        objectEncoderContext.add(zzaD, (Object) null);
        objectEncoderContext.add(zzaE, (Object) null);
        objectEncoderContext.add(zzaF, (Object) null);
        objectEncoderContext.add(zzaG, (Object) null);
        objectEncoderContext.add(zzaH, (Object) null);
        objectEncoderContext.add(zzaI, (Object) null);
        objectEncoderContext.add(zzaJ, (Object) null);
        objectEncoderContext.add(zzaK, (Object) null);
        objectEncoderContext.add(zzaL, (Object) null);
        objectEncoderContext.add(zzaM, (Object) null);
        objectEncoderContext.add(zzaN, (Object) null);
        objectEncoderContext.add(zzaO, (Object) null);
        objectEncoderContext.add(zzaP, (Object) null);
        objectEncoderContext.add(zzaQ, (Object) null);
        objectEncoderContext.add(zzaR, (Object) null);
        objectEncoderContext.add(zzaS, (Object) null);
        objectEncoderContext.add(zzaT, (Object) null);
        objectEncoderContext.add(zzaU, (Object) null);
        objectEncoderContext.add(zzaV, (Object) null);
        objectEncoderContext.add(zzaW, (Object) null);
        objectEncoderContext.add(zzaX, (Object) null);
        objectEncoderContext.add(zzaY, (Object) null);
        objectEncoderContext.add(zzaZ, (Object) zzpn.zzf());
        objectEncoderContext.add(zzba, (Object) null);
        objectEncoderContext.add(zzbb, (Object) null);
        objectEncoderContext.add(zzbc, (Object) null);
    }
}
